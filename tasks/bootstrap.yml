---
# tasks file for ansible-mariadb-docker
    - name: Check if mariadb is running
      tags: maria
      shell: "docker ps |grep mariadb|wc -l"
      register: mariadboutput

    - name: "set MARIADB to true"
      tags: maria
      set_fact:
        MARIADB_RUNNING: True
      when: mariadboutput.stdout.find('1') != -1

    - name: "set MARIADB to false"
      tags: maria
      set_fact:
        MARIADB_RUNNING: False
      when: mariadboutput.stdout.find('1') == -1

    - name: Check if bootstrap is needed
      tags: maria
      set_fact:
        BOOTSTRAP_NEEDED: "{% set res = { 'status': True } %}{% for host in ansible_play_batch %}{% if hostvars[host].MARIADB_RUNNING %}{% if res.update({'status': False}) %}{% endif %}{% endif %}{% endfor %}{{res.status}}"

    - name: mariadb container in bootstrap node
      docker_container:
        name: mariadb
        image: "{{image_name}}"
        state: started
        command: "{% if BOOTSTRAP_NEEDED %}--wsrep-new-cluster {% endif %}--wsrep_node_address={{ ansible_default_ipv4['address'] }} --wsrep_node_name={{inventory_hostname}}"
        pull: true
        docker_api_version: "{{ docker_api_version }}"
        restart_policy: always
        network_mode: host
        env:
          MYSQL_ROOT_PASSWORD: "{{mysql_root_pass}}"
          MYSQL_INITDB_SKIP_TZINFO: "yes"
        ports:
          - "3306:3306"
          - "4444:4444"
          - "4567:4567/udp"
          - "4567:4567"
          - "4568:4568"
        exposed:
          - "3306"
          - "4444"
          - "4567/udp"
          - "4567"
          - "4568"
        volumes:
          - "{{mariadb_data_dir}}:/var/lib/mysql"
          - "/etc/mysql/conf.d:/etc/mysql/conf.d"
      when: inventory_hostname == ansible_play_batch[0]

    - name: wait some seconds to finish bootstrap
      pause:
        seconds: 20
      when: inventory_hostname == ansible_play_batch[0] and BOOTSTRAP_NEEDED
